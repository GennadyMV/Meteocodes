@using Codes.Repositories
@using Codes.Common
@using Codes.Models

@{
    ViewBag.Title = "Аэрология";
}

    @if (this.IsAjax) {
        Layout = "";
    }


@if (!this.IsAjax)
{
<div id="sandbox-container">
            <div id="station-report-data" class="input-group date">
                <span class="input-group-addon">Дата (UTC): </span>
                <input type="text" value="@ViewBag.DateTime" class="form-control"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
            </div>
</div>

<script>

    function dateChanged() {
        $("#station-report-data-result").text("Загрузка");

        var param = { DD: $('#station-report-data input').val().substring(0, 2), GG: 12 };

        $.ajax({
            cache: false,
            data: param,
            url: '@Url.Action("Index", "Station")',
            success: function (data) {
                document.getElementById("station-report-data-result").innerHTML = data;
                UpdateTableHeadersWrap();
            },
            error: function (x, e, thrownError) {
                document.getElementById("content").innerHTML = '<p>Ошибка запроса</p><p>' + thrownError + '</p>';
            }
            
        });
            
        }
    

    $(document).ready(function() {    
        $('#station-report-data input').datepicker({
            todayBtn: true,
            clearBtn: true,
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        })
        .on('changeDate', dateChanged);
    });
    
</script>
}

<div id="station-report-data-result">
<table class="table table-striped tableWithFloatingHeader">
    <thead>
        <tr>
            <th>Станция</th>
            <th class="text-right">Давление (гПа)</th>
            <th class="text-right">Температура (&degС)</th>
            <th class="text-right">Дефицит точки росы (&degС)</th>
            <th class="text-right">Ветер (град)</th>
            <th class="text-right">Скорость (м/с)</th>
        </tr>
    </thead>
    <tbody>        
        @foreach (KeyValuePair<string, ViewMeasurement> item in Model)
        {
            <tr>
               <td>@item.Value.station</td>    
               @if (@item.Value.surface_pressure != @item.Value.no_data)
               {
                   <td class="text-right">@item.Value.surface_pressure</td>
               }
               else
               {
                   <td class="text-right"><em>@item.Value.no_data</em></td>
               }
               @if (@item.Value.surface_temperature != @item.Value.no_data)
               {
                   <td class="text-right">@item.Value.surface_temperature</td>
               }
               else
               {
                   <td class="text-right"><em>@item.Value.no_data</em></td>
               }

               @if (@item.Value.surface_dewpoint != @item.Value.no_data)
               {
                   <td class="text-right">@item.Value.surface_dewpoint</td>
               }
               else
               {
                   <td class="text-right"><em>@item.Value.no_data</em></td>
               }

               @if (@item.Value.surface_wind != @item.Value.no_data)
               {
                   <td class="text-right">@item.Value.surface_wind</td>
               }
               else
               {
                   <td class="text-right"><em>@item.Value.no_data</em></td>
               }

               @if (@item.Value.surface_windspeed != @item.Value.no_data)
               {
                   <td class="text-right">@item.Value.surface_windspeed</td>
               }
               else
               {
                   <td class="text-right"><em>@item.Value.no_data</em></td>
               }

            </tr>
        }        
    </tbody>
</table>
</div>
<script type="text/javascript">
    function UpdateTableHeaders() {
        $("div.divTableWithFloatingHeader").each(function () {
            var originalHeaderRow = $(".tableFloatingHeaderOriginal", this);
            var floatingHeaderRow = $(".tableFloatingHeader", this);
            var offset = $(this).offset();
            var scrollTop = $(window).scrollTop();
            if ((scrollTop > offset.top) && (scrollTop < offset.top + $(this).height())) {
                floatingHeaderRow.css("visibility", "visible");
                floatingHeaderRow.css("top", Math.min(scrollTop - offset.top, $(this).height() - floatingHeaderRow.height()) + "px");

                // Copy cell widths from original header
                $("th", floatingHeaderRow).each(function (index) {
                    var cellWidth = $("th", originalHeaderRow).eq(index).css('width');
                    $(this).css('width', cellWidth);
                });

                // Copy row width from whole table
                floatingHeaderRow.css("width", $(this).css("width"));
            }
            else {
                floatingHeaderRow.css("visibility", "hidden");
                floatingHeaderRow.css("top", "0px");
            }
        });
    }

    function UpdateTableHeadersWrap() {
        $("table.tableWithFloatingHeader").each(function () {
            $(this).wrap("<div class=\"divTableWithFloatingHeader\" style=\"position:relative\"></div>");

            var originalHeaderRow = $("tr:first", this)
            originalHeaderRow.before(originalHeaderRow.clone());
            var clonedHeaderRow = $("tr:first", this)

            clonedHeaderRow.addClass("tableFloatingHeader");
            clonedHeaderRow.css("position", "absolute");
            clonedHeaderRow.css("top", "0px");
            clonedHeaderRow.css("left", $(this).css("margin-left"));
            clonedHeaderRow.css("visibility", "hidden");

            originalHeaderRow.addClass("tableFloatingHeaderOriginal");
        });
        UpdateTableHeaders();
        $(window).scroll(UpdateTableHeaders);
        $(window).resize(UpdateTableHeaders);
    }

    $(document).ready(function () {
        UpdateTableHeadersWrap();
    });
    </script>